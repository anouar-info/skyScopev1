type Blog @aws_iam @aws_api_key {
  id: ID!
  title: String!
  body: String!
  timeCreated: AWSDateTime
  userId: ID
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelBlogConnection @aws_api_key @aws_iam {
  items: [Blog]!
  nextToken: String
}

input ModelBlogFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  body: ModelStringInput
  timeCreated: ModelStringInput
  userId: ModelIDInput
  and: [ModelBlogFilterInput]
  or: [ModelBlogFilterInput]
  not: ModelBlogFilterInput
}

type Query {
  getBlog(id: ID!): Blog @aws_api_key @aws_iam
  listBlogs(filter: ModelBlogFilterInput, limit: Int, nextToken: String): ModelBlogConnection @aws_api_key @aws_iam
}

input ModelBlogConditionInput {
  title: ModelStringInput
  body: ModelStringInput
  timeCreated: ModelStringInput
  userId: ModelIDInput
  and: [ModelBlogConditionInput]
  or: [ModelBlogConditionInput]
  not: ModelBlogConditionInput
}

input CreateBlogInput {
  id: ID
  title: String!
  body: String!
  timeCreated: AWSDateTime
  userId: ID
}

input UpdateBlogInput {
  id: ID!
  title: String
  body: String
  timeCreated: AWSDateTime
  userId: ID
}

input DeleteBlogInput {
  id: ID!
}

type Mutation {
  createBlog(input: CreateBlogInput!, condition: ModelBlogConditionInput): Blog @aws_api_key @aws_iam
  updateBlog(input: UpdateBlogInput!, condition: ModelBlogConditionInput): Blog @aws_api_key @aws_iam
  deleteBlog(input: DeleteBlogInput!, condition: ModelBlogConditionInput): Blog @aws_api_key @aws_iam
}

input ModelSubscriptionBlogFilterInput {
  id: ModelSubscriptionIDInput
  title: ModelSubscriptionStringInput
  body: ModelSubscriptionStringInput
  timeCreated: ModelSubscriptionStringInput
  userId: ModelSubscriptionIDInput
  and: [ModelSubscriptionBlogFilterInput]
  or: [ModelSubscriptionBlogFilterInput]
}

type Subscription {
  onCreateBlog(filter: ModelSubscriptionBlogFilterInput): Blog @aws_subscribe(mutations: ["createBlog"]) @aws_api_key @aws_iam
  onUpdateBlog(filter: ModelSubscriptionBlogFilterInput): Blog @aws_subscribe(mutations: ["updateBlog"]) @aws_api_key @aws_iam
  onDeleteBlog(filter: ModelSubscriptionBlogFilterInput): Blog @aws_subscribe(mutations: ["deleteBlog"]) @aws_api_key @aws_iam
}
